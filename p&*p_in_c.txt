在 C 语言中，`p` 和 `*p` 之间的区别主要涉及 **指针** 和 **指针解引用**：

1. **`p` 本身是一个指针变量**，它存储的是某个地址（内存地址）。
2. **`*p` 是对指针 `p` 进行解引用（dereference）**，它表示的是指针 `p` 指向的内存地址中存储的值。

### 示例：
```c
#include <stdio.h>

int main() {
    int a = 10;   // 定义一个整型变量 a
    int *p = &a;  // 定义一个指针 p，它存储 a 的地址

    printf("p 的值（a 的地址）: %p\n", p);   // 输出 p（即 a 的地址）
    printf("*p 的值（a 的内容）: %d\n", *p); // 输出 *p（即 a 的值）

    return 0;
}
```

### 运行结果（示例）：
```
p 的值（a 的地址）: 0x7ffeefbff58c
*p 的值（a 的内容）: 10
```

### 总结：
- `p`：指针变量，存储某个变量的地址。
- `*p`：解引用指针，访问 `p` 指向的变量的值。

**注意：** `*p` 只有在 `p` 指向的地址有效的情况下才能正确访问，否则会导致未定义行为（如访问空指针 `NULL` 或野指针）。
